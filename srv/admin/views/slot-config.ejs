<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta
        name="viewport"
        content="width=device-width, initial-scale=1.0"
    >
    <title>Slot Configuration - <%=
            slotId.toUpperCase()
            %
        >
    </title>
    <link
        rel="stylesheet"
        href="/style.css"
    >
</head>

<body>
    <div class="container">
        <div class="header">
            <h1>üîß Slot <%=
                    slotId.toUpperCase()
                    %
                > Configuration</h1>
            <p>Configure deployment settings for slot <%=
                    slotId
                    %
                >
            </p>
        </div>

        <div
            class="slot-card"
            style="max-width: 600px; margin: 0 auto;"
        >
            <form
                action="/api/slots/<%= slotId %>"
                method="POST"
                class="slot-form"
            >
                <div class="form-group">
                    <label for="subdomain">Subdomain:</label>
                    <input
                        type="text"
                        id="subdomain"
                        name="subdomain"
                        value="<%= slot.subdomain %>"
                        readonly
                        class="form-control"
                    >
                    <small>This is configured in your Coder template parameters</small>
                </div>

                <div class="form-group">
                    <label for="repository">Repository URL: *</label>
                    <input
                        type="url"
                        id="repository"
                        name="repository"
                        value="<%= slot.repository || '' %>"
                        placeholder="https://github.com/username/repository"
                        required
                        class="form-control"
                    >
                </div>

                <div class="form-group">
                    <label for="branch">Branch:</label>
                    <input
                        type="text"
                        id="branch"
                        name="branch"
                        value="<%= slot.branch || 'main' %>"
                        placeholder="main"
                        class="form-control"
                    >
                </div>

                <div class="form-group">
                    <label>Environment Variables:</label>
                    <div
                        class="env-vars"
                        id="env-vars"
                    >
                        <%
                            if
                            (slot.environment
                            &&
                            Object.keys(slot.environment).length
                        > 0) { %>
                            <%
                                Object.entries(slot.environment).forEach(([key,
                                value])=
                            > { %>
                                <div class="env-var-row">
                                    <input
                                        type="text"
                                        placeholder="KEY"
                                        value="<%= key %>"
                                        class="env-key"
                                    >
                                    <input
                                        type="text"
                                        placeholder="VALUE"
                                        value="<%= value %>"
                                        class="env-value"
                                    >
                                    <button
                                        type="button"
                                        class="btn btn-danger btn-remove"
                                        onclick="removeEnvVar(this)"
                                    >√ó</button>
                                </div>
                                <%
                                    })
                                    %
                                >
                                    <%
                                        }
                                        %
                                    >
                                        <button
                                            type="button"
                                            class="btn btn-primary btn-sm w-100 mt-1"
                                            onclick="addEnvVar()"
                                        >
                                            + Add Environment Variable
                                        </button>
                    </div>
                </div>

                <div class="form-group">
                    <label for="port">Port:</label>
                    <input
                        type="number"
                        id="port"
                        name="port"
                        value="<%= slot.port %>"
                        readonly
                        class="form-control"
                    >
                    <small>This port is automatically assigned and cannot be changed</small>
                </div>

                <div class="form-group">
                    <label for="status">Current Status:</label>
                    <span class="status <%= slot.status %>">
                        <%=
                            slot.status.toUpperCase()
                            %
                        >
                    </span>
                </div>

                <div class="button-group">
                    <button
                        type="submit"
                        class="btn btn-primary"
                    >
                        üíæ Save Configuration
                    </button>
                    <button
                        type="button"
                        class="btn btn-success"
                        onclick="deploySlot()"
                    >
                        üöÄ Deploy Now
                    </button>
                    <button
                        type="button"
                        class="btn btn-warning"
                        onclick="restartSlot()"
                    >
                        üîÑ Restart
                    </button>
                </div>

                <div class="mt-3">
                    <a
                        href="/"
                        class="btn btn-secondary"
                    >‚Üê Back to Dashboard</a>
                    <button
                        type="button"
                        class="btn btn-info"
                        onclick="viewLogs()"
                    >
                        üìã View Logs
                    </button>
                </div>
            </form>
        </div>

        <div
            class="mt-3"
            style="max-width: 600px; margin: 20px auto;"
        >
            <div class="alert alert-info">
                <strong>üí° Tips:</strong>
                <ul style="margin: 10px 0 0 20px;">
                    <li>Make sure your repository has a <code>package.json</code> file</li>
                    <li>Use environment variables for configuration instead of hardcoding values</li>
                    <li>Your app should listen on the port provided via the <code>PORT</code> environment variable</li>
                    <li>Database connection details are automatically provided via environment variables</li>
                </ul>
            </div>
        </div>
    </div>

    <script>
        function addEnvVar() {
            const container = document.getElementById('env-vars');
            const button = container.querySelector('.btn-primary');

            const envRow = document.createElement('div');
            envRow.className = 'env-var-row';
            envRow.innerHTML = `
                <input type="text" placeholder="KEY" class="env-key">
                <input type="text" placeholder="VALUE" class="env-value">
                <button type="button" class="btn btn-danger btn-remove" onclick="removeEnvVar(this)">√ó</button>
            `;

            container.insertBefore(envRow, button);
        }

        function removeEnvVar(button) {
            button.closest('.env-var-row').remove();
        }

        function collectEnvironmentVars() {
            const container = document.getElementById('env-vars');
            const envVars = {};

            container.querySelectorAll('.env-var-row').forEach(row => {
                const key = row.querySelector('.env-key').value.trim();
                const value = row.querySelector('.env-value').value.trim();

                if (key && value) {
                    envVars[key] = value;
                }
            });

            return envVars;
        }

        async function deploySlot() {
            try {
                const response = await fetch(`/api/deploy/<%= slotId %>`, {
                    method: 'POST'
                });

                const result = await response.json();

                if (response.ok) {
                    alert('Deployment successful!');
                    window.location.reload();
                } else {
                    alert('Deployment failed: ' + result.error);
                }
            } catch (error) {
                alert('Error deploying slot: ' + error.message);
            }
        }

        async function restartSlot() {
            try {
                const response = await fetch(`/api/restart/<%= slotId %>`, {
                    method: 'POST'
                });

                const result = await response.json();
                alert(result.message);
            } catch (error) {
                alert('Error restarting slot: ' + error.message);
            }
        }

        function viewLogs() {
            window.open(`/logs/<%= slotId %>`, '_blank');
        }

        // Handle form submission
        document.querySelector('.slot-form').addEventListener('submit', async (e) => {
            e.preventDefault();

            const formData = new FormData(e.target);
            const payload = {
                repository: formData.get('repository'),
                branch: formData.get('branch'),
                environment: collectEnvironmentVars()
            };

            try {
                const response = await fetch(`/api/slots/<%= slotId %>`, {
                    method: 'PUT',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                });

                if (response.ok) {
                    alert('Configuration saved successfully!');
                } else {
                    const error = await response.json();
                    alert('Failed to save configuration: ' + error.message);
                }
            } catch (error) {
                alert('Error saving configuration: ' + error.message);
            }
        });
    </script>
</body>

</html>